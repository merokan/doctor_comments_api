1) How would you handle profanity filtering?

I would install the pre-existing “Obscenity” gem, which is a profanity filter that can swap out an offensive string with a variety of different replacements - asterisks, “$@!#%”, or even a custom string of your choice.

2) How would you handle security and authentication?

I would start by requiring users to register and log in with an email and password (and hash the password using bcrypt) before they're able to leave a comment on and rate a doctor. Ideally they wouldn't even have access to the doctor's page unless they are logged in. If needed, I could also turn off CSRF token validation using "protect_from_forgery with: :null_session" at the top of my controllers.

3) How would you handle functionality where all comments went through an admin approval phase before going live?

To implement an approval process for the comments/ratings, I would want to add another column to the comments table called “Approved” which would be a boolean that defaults to false. The API would only render comments that had been marked as true, so each time a comment is submitted, an admin would be alerted, and would need to go in and change the boolean to true after they’ve approved the content.